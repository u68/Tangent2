RASU8(ML620909)Relocatable Assembler, Ver.1.80.4    assemble list. page:   1 
 Source File: src\vm.asm
 Object File: src\vm.obj
 Date  : 2025/08/18 Mon.[ 1:03]
 Title : 
## Loc. Object                   Line   Source Statements

                                    1   ;; Compile Options : /TML620909 /ML /near /SD /Oa /Ot /W 1 /Fasrc\ 
                                    2   ;; Version Number  : Ver.3.66.2
                                    3   ;; File Name       : vm.c
                                    4   
                                    5   	type (ML620909) 
                                    6   	model large, near
                                    7   	$$TABerror$vm segment table 2h #0h
                                    8   	$$TABmsg$vm segment table 2h #0h
                                    9   	$$init_prog$vm segment code 2h any
                                   10   	$$invalid_instruction$vm segment code 2h any
                                   11   	$$load_from_rom$vm segment code 2h any
                                   12   	$$memcpy$vm segment code 2h any
                                   13   CVERSION 3.66.2
                                   14   CGLOBAL 01H 03H 0000H "invalid_instruction" 08H 02H 01H 00H 81H 08H 00H 00H 07H
                                   15   CGLOBAL 01H 03H 0000H "memcpy" 08H 02H 00H 00H 82H 08H 00H 00H 07H
                                   16   CGLOBAL 01H 03H 0000H "init_prog" 08H 02H 02H 00H 80H 00H 00H 00H 07H
                                   17   CGLOBAL 01H 03H 0000H "load_from_rom" 08H 02H 04H 00H 80H 04H 00H 00H 07H
                                   18   CENUMTAG 0000H 0000H 0001H 0017H "SPECIAL_CHARS"
                                   19   CENUMMEM 0000000AH "SP_EXE"
                                   20   CENUMMEM 00000009H "SP_TAB"
                                   21   CENUMMEM 00000020H "SP_SPACE"
                                   22   CENUMMEM 00000008H "SP_BACKSPACE"
                                   23   CENUMMEM 0000002AH "SP_HOME"
                                   24   CENUMMEM 0000001AH "SP_END"
                                   25   CENUMMEM 0000003AH "SP_YES"
                                   26   CENUMMEM 00000012H "SP_NO"
                                   27   CENUMMEM 00000021H "SP_OK"
                                   28   CENUMMEM 00000020H "SP_UP"
                                   29   CENUMMEM 00000022H "SP_DOWN"
                                   30   CENUMMEM 00000029H "SP_LEFT"
                                   31   CENUMMEM 00000019H "SP_RIGHT"
                                   32   CENUMMEM 00000010H "SP_PLUS"
                                   33   CENUMMEM 00000011H "SP_MINUS"
                                   34   CENUMMEM 00000031H "SP_ALT"
                                   35   CENUMMEM 00000030H "SP_ABC"
                                   36   CENUMMEM 00000039H "SP_ESC"
                                   37   CENUMMEM 0000003AH "SP_SELECTLEFT"
                                   38   CENUMMEM 0000003BH "SP_SELECTRIGHT"
                                   39   CENUMMEM 0000003CH "SP_PASTE"
                                   40   CENUMMEM 0000003DH "SP_COPY"
                                   41   CENUMMEM 0000003EH "SPECIAL_MAX"
                                   42   CENUMTAG 0000H 0000H 0000H 0025H "BUTTON"
                                   43   CENUMMEM 0000000BH "B_0"
                                   44   CENUMMEM 0000003FH "B_1"
                                   45   CENUMMEM 00000037H "B_2"
                                   46   CENUMMEM 0000002FH "B_3"
                                   47   CENUMMEM 0000003EH "B_4"
                                   48   CENUMMEM 00000036H "B_5"
                                   49   CENUMMEM 0000002EH "B_6"
                                   50   CENUMMEM 0000003DH "B_7"
                                   51   CENUMMEM 00000035H "B_8"
                                   52   CENUMMEM 0000002DH "B_9"
                                   53   CENUMMEM 0000003CH "B_A"
                                   54   CENUMMEM 00000034H "B_B"
                                   55   CENUMMEM 0000002CH "B_C"
                                   56   CENUMMEM 00000024H "B_D"
                                   57   CENUMMEM 0000001CH "B_E"
                                   58   CENUMMEM 00000014H "B_F"
                                   59   CENUMMEM 0000003DH "B_G"
                                   60   CENUMMEM 00000035H "B_H"
                                   61   CENUMMEM 0000002DH "B_I"
                                   62   CENUMMEM 00000025H "B_J"
                                   63   CENUMMEM 0000001DH "B_K"
                                   64   CENUMMEM 0000003EH "B_L"
                                   65   CENUMMEM 00000036H "B_M"
                                   66   CENUMMEM 0000002EH "B_N"
                                   67   CENUMMEM 00000026H "B_O"
                                   68   CENUMMEM 0000001EH "B_P"
                                   69   CENUMMEM 0000003FH "B_Q"
                                   70   CENUMMEM 00000037H "B_R"
                                   71   CENUMMEM 0000002FH "B_S"
                                   72   CENUMMEM 00000027H "B_T"
                                   73   CENUMMEM 0000001FH "B_U"
                                   74   CENUMMEM 0000000BH "B_V"
                                   75   CENUMMEM 0000000CH "B_W"
                                   76   CENUMMEM 0000000DH "B_X"
                                   77   CENUMMEM 0000000EH "B_Y"
                                   78   CENUMMEM 0000000FH "B_Z"
                                   79   CENUMMEM 00000040H "BUTTON_COUNT"
                                   80   CTYPEDEF 0000H 0000H 42H "ushort" 02H 00H 08H
                                   81   CTYPEDEF 0000H 0000H 42H "byte" 02H 00H 00H
                                   82   CTYPEDEF 0000H 0000H 42H "word" 02H 00H 08H
                                   83   CGLOBAL 01H 00H 000DH "msg" 05H 01H 0DH 00H 00H 00H
                                   84   CGLOBAL 01H 00H 0015H "error" 05H 01H 15H 00H 00H 00H
                                   85   CFILE 0001H 00000070H "..\\src\\base.h"
                                   86   CFILE 0002H 00000014H "..\\src\\vm.h"
                                   87   CFILE 0003H 00000072H "..\\src\\io.h"
                                   88   CFILE 0004H 00000008H "..\\src\\vm_config.h"
                                   89   CFILE 0000H 0000002CH "..\\src\\vm.c"
                                   90   
  --------------------------       91   	rseg $$invalid_instruction$vm
                                   92   CFUNCTION 1
                                   93   
??:0000                            94   _invalid_instruction	:
                                   95   CBLOCK 1 1 11
                                   96   
                                   97   ;;{
                                   98   CLINEA 0000H 0001H 000BH 0001H 0001H
??:0000 CE-F8                      99   	push	lr
??:0002 5E-F8                     100   	push	er8
??:0004 05-F8                     101   	mov	er8,	er0
                                  102   CBLOCK 1 2 11
                                  103   CRET 0002H
                                  104   CARGUMENT 46H 0002H 0028H "opc" 02H 00H 01H
                                  105   
                                  106   ;;    print(error, 1, 1, 2);
                                  107   CLINEA 0000H 0001H 000CH 0005H 001AH
??:0006 02 00                     108   	mov	r0,	#02h
??:0008 4E-F0                     109   	push	r0
??:000A 01 03                     110   	mov	r3,	#01h
??:000C 01 02                     111   	mov	r2,	#01h
??:000E 00'00                     112   	mov	r0,	#BYTE1 OFFSET _error
??:0010 00'01                     113   	mov	r1,	#BYTE2 OFFSET _error
??:0012 01-F0'00-00'              114   	bl	_print
??:0016 02 E1                     115   	add	sp,	#2 
                                  116   
                                  117   ;;    print(msg, 1, 2, 2);
                                  118   CLINEA 0000H 0001H 000DH 0005H 0018H
??:0018 02 00                     119   	mov	r0,	#02h
??:001A 4E-F0                     120   	push	r0
??:001C 02 03                     121   	mov	r3,	#02h
??:001E 01 02                     122   	mov	r2,	#01h
??:0020 00'00                     123   	mov	r0,	#BYTE1 OFFSET _msg
??:0022 00'01                     124   	mov	r1,	#BYTE2 OFFSET _msg
??:0024 01-F0'00-00'              125   	bl	_print
??:0028 02 E1                     126   	add	sp,	#2 
                                  127   
                                  128   ;;    derefw(0x9000) = opc;
                                  129   CLINEA 0000H 0001H 000EH 0005H 0019H
??:002A 13-98 00-90               130   	st	er8,	09000h
                                  131   CBLOCKEND 1 2 15
                                  132   
                                  133   ;;}
                                  134   CLINEA 0000H 0001H 000FH 0001H 0001H
??:002E 1E-F8                     135   	pop	er8
??:0030 8E-F2                     136   	pop	pc
                                  137   CBLOCKEND 1 1 15
                                  138   CFUNCTIONEND 1
                                  139   
                                  140   
  --------------------------      141   	rseg $$memcpy$vm
                                  142   CFUNCTION 0
                                  143   
??:0000                           144   _memcpy	:
                                  145   CBLOCK 0 1 18
                                  146   
                                  147   ;;{
                                  148   CLINEA 0000H 0001H 0012H 0001H 0001H
??:0000 5E-FE                     149   	push	fp
??:0002 1A-AE                     150   	mov	fp,	sp
??:0004 6E-F8                     151   	push	xr8
??:0006 5E-F4                     152   	push	er4
??:0008 25-FA                     153   	mov	er10,	er2
??:000A 05-F8                     154   	mov	er8,	er0
                                  155   CBLOCK 0 2 18
                                  156   CARGUMENT 46H 0002H 0028H "dest" 02H 00H 01H
                                  157   CARGUMENT 46H 0002H 0029H "src" 02H 00H 01H
                                  158   CARGUMENT 42H 0002H 0002H "size" 02H 00H 01H
                                  159   CLOCAL 46H 0002H 0026H 0002H "i" 02H 00H 08H
                                  160   
                                  161   ;;    for(i = 0;i < size;i++)
                                  162   CLINEA 0000H 0001H 0014H 0005H 001BH
??:000C 00 E4                     163   	mov	er4,	#0 
??:000E 08 CE                     164   	bal	_$L9
??:0010                           165   _$L6 :
                                  166   CBLOCK 0 3 21
                                  167   
                                  168   ;;        deref(dest+i) = deref(src+i);
                                  169   CLINEA 0000H 0001H 0016H 0009H 0025H
??:0010 A5-F0                     170   	mov	er0,	er10
??:0012 46-F0                     171   	add	er0,	er4
??:0014 05-F2                     172   	mov	er2,	er0
??:0016 85-F0                     173   	mov	er0,	er8
??:0018 46-F0                     174   	add	er0,	er4
??:001A 20-92                     175   	l	r2,	[er2]
??:001C 01-92                     176   	st	r2,	[er0]
                                  177   CBLOCKEND 0 3 23
                                  178   
                                  179   ;;    for(i = 0;i < size;i++)
                                  180   CLINEA 0000H 0000H 0014H 0005H 001BH
??:001E 81 E4                     181   	add	er4,	#1 
??:0020                           182   _$L9 :
??:0020 42 B2                     183   	l	er2,	2[fp]
??:0022 27-F4                     184   	cmp	er4,	er2
??:0024 F5 C1                     185   	blt	_$L6
                                  186   CBLOCKEND 0 2 24
                                  187   
                                  188   ;;}
                                  189   CLINEA 0000H 0001H 0018H 0001H 0001H
??:0026 1E-F4                     190   	pop	er4
??:0028 2E-F8                     191   	pop	xr8
??:002A EA-A1                     192   	mov	sp,	fp
??:002C 1E-FE                     193   	pop	fp
??:002E 1F-FE                     194   	rt
                                  195   CBLOCKEND 0 1 24
                                  196   CFUNCTIONEND 0
                                  197   
                                  198   
  --------------------------      199   	rseg $$init_prog$vm
                                  200   CFUNCTION 2
                                  201   
??:0000                           202   _init_prog	:
                                  203   CBLOCK 2 1 27
                                  204   
                                  205   ;;}
                                  206   CLINEA 0000H 0001H 001DH 0001H 0001H
??:0000 1F-FE                     207   	rt
                                  208   CBLOCKEND 2 1 29
                                  209   CFUNCTIONEND 2
                                  210   
                                  211   
  --------------------------      212   	rseg $$load_from_rom$vm
                                  213   CFUNCTION 4
                                  214   
??:0000                           215   _load_from_rom	:
                                  216   CBLOCK 4 1 32
                                  217   
                                  218   ;;{
                                  219   CLINEA 0000H 0001H 0020H 0001H 0001H
??:0000 5E-F8                     220   	push	er8
??:0002 5E-F4                     221   	push	er4
??:0004 05-F8                     222   	mov	er8,	er0
                                  223   CBLOCK 4 2 32
                                  224   CARGUMENT 46H 0002H 0028H "adr" 02H 00H 01H
                                  225   CLOCAL 46H 0001H 0016H 0002H "i" 02H 00H 00H
                                  226   CLOCAL 46H 0002H 0026H 0002H "dadr" 02H 00H 08H
                                  227   
                                  228   ;;    byte i = 0;
                                  229   CLINEA 0000H 0001H 0023H 0005H 000FH
??:0006 00 02                     230   	mov	r2,	#00h
                                  231   
                                  232   ;;    word dadr = derefw(adr);
                                  233   CLINEA 0000H 0001H 0024H 0005H 001CH
??:0008 82-90                     234   	l	er0,	[er8]
??:000A 05-F4                     235   	mov	er4,	er0
                                  236   
                                  237   ;;    while(derefw(MAXIMUS_PROGRAMUS_START + (i * 2))) (i++);
                                  238   CLINEA 0000H 0001H 0025H 0005H 003BH
??:000C 01 CE                     239   	bal	_$L12
??:000E                           240   _$L14 :
??:000E 01 12                     241   	add	r2,	#01h
??:0010                           242   _$L12 :
??:0010 20-80                     243   	mov	r0,	r2
??:0012 00 01                     244   	mov	r1,	#00h
??:0014 06-F0                     245   	add	er0,	er0
??:0016 08-A0 00-9C               246   	l	er0,	09c00h[er0]
??:001A F9 C8                     247   	bne	_$L14
                                  248   
                                  249   ;;    derefw(MAXIMUS_PROGRAMUS_START + (i * 2)) = dadr;
                                  250   CLINEA 0000H 0001H 0026H 0005H 0035H
??:001C 20-80                     251   	mov	r0,	r2
??:001E 00 01                     252   	mov	r1,	#00h
??:0020 06-F0                     253   	add	er0,	er0
??:0022 09-A4 00-9C               254   	st	er4,	09c00h[er0]
                                  255   CBLOCKEND 4 2 39
                                  256   
                                  257   ;;}
                                  258   CLINEA 0000H 0001H 0027H 0001H 0001H
??:0026 1E-F4                     259   	pop	er4
??:0028 1E-F8                     260   	pop	er8
??:002A 1F-FE                     261   	rt
                                  262   CBLOCKEND 4 1 39
                                  263   CFUNCTIONEND 4
                                  264   
                                  265   	public _msg
                                  266   	public _error
                                  267   	public _invalid_instruction
                                  268   	public _memcpy
                                  269   	public _init_prog
                                  270   	public _load_from_rom
                                  271   	extrn code far : _print
                                  272   	extrn code far : _main
                                  273   
  --------------------------      274   	rseg $$TABerror$vm
00:0000                           275   _error :
00:0000 74 77 69 6E 20 73 6D 74   276   	DB	"twin smth aint right"
00:0008 68 20 61 69 6E 74 20 72   >>>   
00:0010 69 67 68 74 00            >>>   , 00H
                                  277   
  --------------------------      278   	rseg $$TABmsg$vm
00:0000                           279   _msg :
00:0000 63 68 65 63 6B 20 30 78   280   	DB	"check 0x9000"
00:0008 39 30 30 30 00            >>>   , 00H
                                  281   
                                  282   	end



  Target       : ML620909 (nX-U8/100)
  Memory Model : LARGE
  Data   Model : NEAR
  ROM WINDOW   :    0H to 8FFFH
  Internal RAM : 9000H to EFFFH

  Errors   : 0
  Warnings : 0  (/Wrpeast)
  Lines    : 282
